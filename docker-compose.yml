version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: library_management
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - library-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  api:
    build: 
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: library_management
      DB_SSLMODE: disable
      DB_TIMEZONE: UTC
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      PORT: 8080
      GIN_MODE: release
      ADMIN_EMAIL: admin@library.com
      ADMIN_PASSWORD: admin123
      ADMIN_NAME: Administrator
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - library-network
    restart: unless-stopped

  web:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - api
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8080
    networks:
      - library-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  library-network:
    driver: bridge
